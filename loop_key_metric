Pipelinée : indique si la boucle est pipelinée. Le pipelining permet de traiter simultanément plusieurs éléments de données (dans le même cycle d’horloge) tout en utilisant efficacement le matériel du chemin de données, en le maintenant occupé.

II (Intervalle d’initiation) : montre l’intervalle d’initiation (II) soutenable de la boucle. Le traitement des données au sein des boucles est une source supplémentaire de parallélisme de pipeline : lorsqu’on pipelíne une boucle, l’itération suivante démarre avant la fin des précédentes. L’II correspond au nombre de cycles d’horloge nécessaires pour résoudre les dépendances entre les itérations. Le compilateur Intel ® oneAPI DPC++/C++ identifie automatiquement ces dépendances et génère le matériel approprié pour les résoudre, tout en minimisant l’II.

f MAX estimé : indique la fréquence d’horloge maximale estimée à laquelle la boucle peut fonctionner (aussi appelée « f MAX programmée »). C’est la fréquence la plus élevée à laquelle les sorties des registres peuvent être mises à jour. Si la f MAX estimée est inférieure à la fréquence cible, elle apparaît en rouge avec un point d’interrogation et une info-bulle indiquant la fréquence cible. La vitesse d’horloge est limitée par le retard de propagation physique du signal entre deux registres consécutifs, fonction de la complexité de la logique booléenne sur ce chemin ; c’est le chemin critique. La f MAX est le calcul réciproque du retard du chemin critique. Une f MAX élevée est souhaitable, car elle se traduit directement par de hautes performances en l’absence d’autres goulets d’étranglement. Le compilateur ajuste son optimisation de la f MAX en fonction de la présence ou non d’un objectif de f MAX et/ou d’une directive #pragma II ; fixer un objectif de f MAX reste une suggestion, alors qu’une directive #pragma II génère une erreur si l’II demandé n’est pas atteint. La f MAX obtenue pour chaque bloc de code figure dans le rapport d’analyse de boucle.

Latence : montre le nombre de cycles d’horloge nécessaires pour qu’une boucle exécute une ou plusieurs instructions. Une latence faible est généralement souhaitable, mais la réduire peut parfois diminuer la f MAX.

Itérations spéculées : indique la spéculation de boucle. La spéculation de boucle est une technique d’optimisation qui permet d’améliorer l’efficacité du pipelining en lançant des itérations futures avant de savoir si la boucle sera bien encore active.

Itérations intercalées maximales : indique le nombre d’invocations intercalées d’une boucle interne pouvant être exécutées simultanément. Pour en savoir plus, reportez‑vous à l’attribut max_interleaving.
